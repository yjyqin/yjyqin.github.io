---
layout: post
title:  "启动一个有趣的小项目, JavaProjectParser"
date:   2016-05-26 08:04:42 +0800
---

昨天在github上建了个新的项目，名字叫[JavaProjectParser](https://github.com/yjyqin/JavaProjectParser)。 目的是扫描一个Java项目的src/main/java下的所有源文件，然后生成一幅关系图来帮助理解整个项目的结构。

其实想写这个东西很久了，每次鼓足勇气准备读一下开源的代码时，总是很容易就迷失在各种调用关系中，尤其是涉及到interface/extends之类，如果不做笔记很难记住究竟当前这个类在干吗。我知道有人在用UML来分析代码库，但我还是觉得不够直观。

每次看得时候，有些问题我总想一开始就弄明白。
比如说， 整个codebase中的入口在哪里？如果是规范命名的代码，启动类的名字或包里很可能有 _Main/MainApp/Bootstrap/Start_ 之类的字样，但如果是作为类库设计的代码，很多并没有入口，更多是通过单元测试看代码的功能。
再比如说，整个代码库中究竟哪几个类或者接口是核心功能？哪些是边缘性的辅助类？

于是我想，如果有个小工具可以帮我扫描整个代码库，找出每个Java类之间的关系，告诉我究竟哪个类被调用的次数最多，哪个类总是调用别人，等等之类的问题，然后将所有这些信息可视化，那就完美了。